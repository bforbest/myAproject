@model webpagetest.Models.Video
@using Microsoft.AspNet.Identity

@{
    ViewBag.Title = "Details";
    Layout = "~/Views/Shared/_VideoLayout.cshtml";
}
@Html.Action("PartialCarousel", "Video")


<div class="carouselFlexTop">  </div>

<div class="videotron">
    <div class="container">
        <div class="row">
            <div class="col-md-8">
                <div class="well header-tron">
                    <div class="row">
                        <div class="col-md-3">
                            <p><img src=" @Html.DisplayFor(model => model.ImageUrl)" class="img-thumbnail image-tron" /></p>
                        </div>
                        <div class="col-md-9">
                            <h1>@Html.DisplayFor(model => model.Name)</h1>
                           
                        </div>
                    </div>
                </div>
                <div class="video-content">
                    <iframe class="embed-responsive-item" height="400" width="100%" src="https://www.youtube.com/embed/XL9Ri8pO68w" allowfullscreen></iframe>
                </div>
                <div class="progress">
                    <div class="custom-group-progress">
                        @Ajax.ActionLink(" ", "thumbsUp",
         new { id = (Html.DisplayName(Model.Name)) },
         new AjaxOptions
         {
             HttpMethod = "POST",
             /* UpdateTargetId = "likeCountDiv",*/
             InsertionMode = InsertionMode.Replace
         },
         new { @class = "custom-btn-progress glyphicon glyphicon-heart" })

                        <div class="progress-bar progress-bar-success progress-bar-striped" role="progressbar" style="width: @likeProcent()%">
                        </div>
                        <div class="progress-bar progress-bar-warning progress-bar-striped" role="progressbar" style="width: @disLikeProcent()%">
                        </div>

                        @Ajax.ActionLink(" ", "thumbsDown",
     new { id = (Html.DisplayName(Model.Name)) },
     new AjaxOptions
     {
         HttpMethod = "POST",
         /* UpdateTargetId = "likeCount",*/
         InsertionMode = InsertionMode.Replace
     },
     new { @class = "custom-btn-progress glyphicon glyphicon-heart-empty" })
                    </div>
                    <div class="clearfix"></div>
                </div>
                @*<button id="fav" type="button" class="ttip btn btn-default" data-toggle="tooltip" data-placement="bottom" title="Favoritmarkera"><span class="glyphicon glyphicon-heart"></span></button>*@
                @Ajax.ActionLink(" ", "AddToFav",
                            new { id = (Model.VideoID) },
                            new AjaxOptions
                            {
                                HttpMethod = "POST",
                                OnSuccess="favoriteToggle",
                                //UpdateTargetId = "fav",
                                //InsertionMode = InsertionMode.Replace
                            },
                            new { @class = "btn btn-default glyphicon",id="fav" }) 

                
                @Ajax.ActionLink(" ", "AddToWatchLater",
                            new { id = (Model.VideoID) },
                            new AjaxOptions
                            {
                                HttpMethod = "POST",
                                OnSuccess = "watchLaterToggle",
                                /* UpdateTargetId = "likeCountDiv",*/
                                //InsertionMode = InsertionMode.Replace
                            },
                            new { @class = "btn btn-default glyphicon glyphicon-heart", id="watch" })
            </div>

            <div class="col-md-4">
                <img src="http://placehold.it/350x250/000000" />
                @Html.Partial("_Chat")
            </div>
        </div>
    </div>
</div>

<div class="container body-content">
    <div class="well-sm">
        <!-- Nav tabs -->
        <ul class="nav nav-tabs" role="tablist">
            <li class="active">
                <a href="#home" role="tab" data-toggle="tab">
                    <icon class="fa fa-home"></icon> Home
                </a>
            </li>
            <li>
                <a href="#profile" role="tab" data-toggle="tab">
                    <i class="fa fa-user"></i> Profile
                </a>
            </li>
            <li>
                <a href="#messages" role="tab" data-toggle="tab">
                    <i class="fa fa-envelope"></i> Messages
                </a>
            </li>
            <li>
                <a href="#settings" role="tab" data-toggle="tab">
                    <i class="fa fa-cog"></i> Settings
                </a>
            </li>
        </ul>

        <!-- Tab panes -->
        <div class="tab-content">
            <div class="tab-pane fade active in" id="home">
                <p>@Html.DisplayFor(model => model.Discription) </p>

                <img src="http://lorempixel.com/400/400/cats/1" alt="Cats" />
            </div>
            <div class="tab-pane fade" id="profile">
                <h2>Profile Content Goes Here</h2>
                <img src="http://lorempixel.com/400/400/cats/2" alt="Cats" />
            </div>
            <div class="tab-pane fade" id="messages">
                <h2>Messages Content Goes Here</h2>
                <img src="http://lorempixel.com/400/400/cats/3" alt="Cats" />
            </div>
            <div class="tab-pane fade" id="settings">
                <h2>Settings Content Goes Here</h2>
                <img src="http://lorempixel.com/400/400/cats/4" alt="Cats" />
            </div>
        </div>
    </div>
    <h2>Details</h2>

    <div>
        <h4>Video</h4>
        <hr />
        <dl class="dl-horizontal">
            <dt>
                @Html.DisplayNameFor(model => model.Name)
            </dt>

            <dd>
                @Html.DisplayFor(model => model.Name)
            </dd>

            <dt>
                @Html.DisplayNameFor(model => model.IsEmbed)
            </dt>

            <dd>
                @Html.DisplayFor(model => model.IsEmbed)
            </dd>

            <dt>
                @Html.DisplayNameFor(model => model.VideoUrl)
            </dt>

            <dd>
                @Html.DisplayFor(model => model.VideoUrl)
            </dd>

            <dt>
                @Html.DisplayNameFor(model => model.Discription)
            </dt>

            <dd>
                @Html.DisplayFor(model => model.Discription)
            </dd>

            <dt>
                @Html.DisplayNameFor(model => model.ImageUrl)
            </dt>

            <dd>
                @Html.DisplayFor(model => model.ImageUrl)
            </dd>

        </dl>
    </div>
    <p>
        @Html.ActionLink("Edit", "Edit", new { id = Model.VideoID }) |
        @Html.ActionLink("Back to List", "Index")
    </p>
</div>

@functions{ public int likeProcent()
    {
        int thumbsUp = Model.thumbsUp;
        int thumbsDown = Model.thumbsDown;
        decimal sum = thumbsUp + thumbsDown;
        int procent=0;
        if (sum != 0)
        {
            procent = Convert.ToInt32(thumbsUp / sum * 100);
        }
        return procent;
    }
    public int disLikeProcent()
    {
        return (100 - likeProcent());
    }
}

@section scripts {
    <!--Script references. -->
    <!--The jQuery library is required and is referenced by default in _Layout.cshtml. -->
    <!--Reference the SignalR library. -->
    <script src="~/Scripts/jquery.signalR-2.2.0.min.js"></script>
    <!--Reference the autogenerated SignalR hub script. -->
    <script src="~/signalr/hubs"></script>
    <!--SignalR script to update the chat page and send messages.-->
    <script>
        $(function () {
            // Reference the auto-generated proxy for the hub.
            var chat = $.connection.chatHub;
            // Create a function that the hub can call back to display messages.
            chat.client.addNewMessageToPage = function (name, message) {
                // Add the message to the page.
                $('#discussion').append('<li><strong>' + htmlEncode(name)
                    + '</strong>: ' + htmlEncode(message) + '</li>');
            };
            var name = "@User.Identity.GetUserName()";
            // Get the user name and store it to prepend to messages.
            @{if (Request.IsAuthenticated) {
                <text> $('#displayname').val(name);</text>
                } else {
                <text> $('#displayname').val("User " + Math.floor((Math.random() * 100) + 1));</text>
        // $('#displayname').val(prompt('Enter your name:', '')); (Alias Window... what you had)
    } }
            // Set initial focus to message input box.
            $('#message').focus();
            // Start the connection.
            $.connection.hub.start().done(function () {
                $('#sendmessage').click(function () {
                        // Call the Send method on the hub.
                        chat.server.send($('#displayname').val(), $('#message').val());
                    // Clear text box and reset focus for next comment.
                    $('#message').val('').focus();
                    });
                });
        });
        // This optional function html-encodes messages for display in the page.
        function htmlEncode(value) {
            var encodedValue = $('<div />').text(value).html();
            return encodedValue;
        }
    </script>

<script language="javascript" type="text/javascript">
        function favoriteToggle(data) {
            if (data == '0') {

                $("#fav").addClass('glyphicon-star-empty');
                $("#fav").removeClass('glyphicon-star');

            }

            else if (data == '1') {

                $("#fav").removeClass('glyphicon-star-empty');
                $("#fav").addClass('glyphicon-star');
            }

            else if (data == '2') {

                alert('Du har nått maxgränsen för antalat filmer i din se-senarelista (50 stycken). För mer information, besök vår sida om vanliga frågor.');

            }

            else {

                alert('Ogiltigt svar från servern: ' + data);

            }

        }
        function watchLaterToggle(data) {
            if (data == '0') {

                $("#watch").addClass('glyphicon-heart-empty');
                $("#watch").removeClass('glyphicon-heart');

            }

            else if (data == '1') {

                $("#watch").removeClass('glyphicon-heart-empty');
                $("#watch").addClass('glyphicon-heart');
            }

            else if (data == '2') {

                alert('Du har nått maxgränsen för antalat filmer i din se-senarelista (50 stycken). För mer information, besök vår sida om vanliga frågor.');

            }

            else {

                alert('Ogiltigt svar från servern: ' + data);

            }

        }

    function OnFailure(xhr, status) {
        alert('Error: '+xhr.statusText);
    }


    $(document).ready(function () {
        if( @Html.Action("AddToFav",new {isOn=true })==2){
            $("#fav").addClass('glyphicon-star');
        } else {
            $("#fav").addClass('glyphicon-star-empty');
        }

        if( @Html.Action("AddToWatchLater",new {isOn=true })==2){
            $("#watch").addClass('glyphicon-heart');
        } else {
            $("#watch").addClass('glyphicon-heart-empty');
        }

    });
</script>

}
}